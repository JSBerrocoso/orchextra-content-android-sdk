// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'common_methods.gradle'
apply from: 'dependencies.gradle'

buildscript {
    ext.kotlin_version = '1.3.50'
    repositories {
        google()
        jcenter()
//    mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'
        classpath 'me.tatarka:gradle-retrolambda:3.7.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'
    }
}

// Required because retrolambda is on maven central
repositories {
    jcenter()
    mavenCentral()
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url "http://jcenter.bintray.com" }
        maven { url "https://jitpack.io" }
        maven { url "https://dl.bintray.com/gigigo-desarrollo/maven" }
    }
    tasks.withType(JavaCompile) {
        sourceCompatibility = "1.7"
        targetCompatibility = "1.7"
    }

    tasks.withType(Javadoc).all {
        enabled = false
    }
}

import org.gradle.internal.os.OperatingSystem

task deployDebugLib(type: Exec) {
    workingDir "./"
    def command = "./gradlew"
    if (OperatingSystem.current().isWindows()) {
        command = "gradlew.bat"
    }

    commandLine command, "install", "bintrayUpload", "-Pdebug"
}

task deployQualityLib(type: Exec) {
    workingDir "./"
    def command = "./gradlew"
    if (OperatingSystem.current().isWindows()) {
        command = "gradlew.bat"
    }

    commandLine command, "install", "bintrayUpload", "-Pquality"
}

task deployLib(type: Exec) {
    workingDir "./"
    def command = "./gradlew"
    if (OperatingSystem.current().isWindows()) {
        command = "gradlew.bat"
    }

    commandLine command, "install", "bintrayUpload"
}